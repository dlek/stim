.\" Process this file with
.\" groff -man -Tascii stim.1
.\"
.TH STIM 1 "November 2012" "geekfactor" "geekfactor"
.SH NAME
stim \- Simple Task Information Management
.SH SYNOPSIS
.B stim start \fR[\fB--when=\\fItimespec\fR] \fItask\fR

.B stim stop

.B stim log \fImessage\fR

.B stim report \fR[\fB--dateformat=\fIdateformat\fR] [\fB--separator=\fIstr\fR] 
     [\fB--format=\fIformat\fR] [\fB--no-summary\fR] \fIdaterange\fR [\fItaskpath ...\fR]

.B stim status
.SH DESCRIPTION
.PP
\fBStim\fR is a simple application for tracking time spent on various tasks.  Stim records context switches and session stops and provides a reporting mechanism.  While a simple command-line utility, \fBStim\fR can integrate with the user environment and desktop tools to provide a fairly useful time clock.
.PP
Originally \fBStim\fR was meant to also assist in task and project management by supporting the organization of task information and projection.  This may be implemented or integrated in later versions but currently \fBStim\fR will remain a time logging application.
.SH LOGGING
.PP
The following commands perform logging functions for tracking time spent on various projects and tasks.
.TP
.B stim start [\fB--when=\fItimespec\fR] \fItask\fR
This invocation logs the beginning of a task.  If a task is already active, it is sufficient to issue this command to switch to the new task--an explicit \fBstop\fR is not necessary.
.TP
.B stim stop [\fB--when=\fItimespec\fR]
This invocation logs a stop to any task work.
.TP
.B stim log [\fB--when=\fItimespec\fR] \fImessage\fR
This invocation records information about the work being performed on the current task.
.PP
If specified, \fItimespec\fR will be applied instead of the current time.  It is possible to specify both absolute and relative time.
.TP
.B \fB--when=\fR[\fIYYYYMMDD\fR ]\fIHH\fR:\fIMM\fR[:\fBSS\fR]
Time is logged at the given absolute time.  If not specified, current date and current seconds are used.
.TP
.B \fB--when=-\fIHH\fB:\fIMM\fR
Time is logged at the current time, minus the specified offset.
.SH REPORTING
The following commands perform reporting functions.
.TP
.B stim report [\fB--dateformat=\fIdateformat\fR] [\fB--separator=\fIstr\fR] 
     [\fB--format=\fIformat\fR] [\fB--no-summary\fR] \fIdaterange\fR [\fItaskpath ...\fR]
.br
Report time for period given by \fIdaterange\fR, optionally limited to projects and tasks limited by \fItaskpath\fR.
.br
.B --dateformat=\fIdateformat\fR
Date will be output according to format as interpreted by strftime(3).
.br
.B \fB--separator=\fIstr\fR
Log entries for a task will be separated by \fIstr\fR.
.br
.B \fB--format=\fIformat\fR
Line items will be formatted using the template \fIformat\fR.  In this the following substitutions are made:
.br
.B  \fB%BEGIN%\fR, \fB%END%\fR
The beginning and end times of the task, respectively.
.br
.B  \fB%DETAIL%\fR
The project and task.
.br
.B  \fB%LOG%\fR
The log entries, if any, associated with the task session.
.TP
.B \fBno-aummary\fR
Suppress summary with totals over given date range.
.TP
.B \fIdaterange\fR
Report for the specified period.  The basic format for this argument is \fIYYYYMMDD\fR-\fIYYYYMMDD\fR, but \fBtoday\fR and \fByesterday\fR can be substituted as appropriate.
.TP
.B \fItaskpath\fR
Report only the specified projects and tasks.
.TP
.B stim status
Produce a bare-bones report on the time worked today, on the current task, and in this session.  There are four fields: the total time worked today up to the current session, the time spent on the current task today up to the current session, the start time of the current session and the current task.

The output of this command is designed such that it only needs to be invoked when the log file is updated, and the current status in human terms (i.e., time worked today including current session, etc.) can be calculated from the given reference points with minimal access to the log file.
.SH BUGS
Some unimplemented features, as noted.  Otherwise please send reports to stim-bugs@geekfactor.com.

It is necesary to create ~/.stim/general.log manually before using the program.

When specified absolute timespec, it may seem odd that if seconds are not specified, the current timestamp's seconds are used.  One alternative would be to use an arbitrary constant, the most obvious probably "00".  Events logged with this value for the seconds may then be spuriously interpreted as having a manually entered time, even if that was not the case.  As such, using an arbitrary constant both adds extra information, and causes that information to be intrinsically inaccurate.

Another option may have been to use a random number, but is more actively deceptive than simply using the current timestamp.

Forcing the user to specify seconds is just ridiculous.
